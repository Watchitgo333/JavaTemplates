package com.codingdojo.projectmanager.models;

import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.springframework.format.annotation.DateTimeFormat;

@Entity
@Table(name="projects")
public class Project {
	
	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	private Long Id;
	
	@NotEmpty(message="Project Title cannot be blank!")
	private String title;
	
	@NotEmpty(message="Project Description cannot be blank!")
	@Size(min=3, message="Project Description must be at least 3 characters.")
	private String description;
	
	@DateTimeFormat(pattern="yyyy-MM-dd")
	@NotNull(message="Please enter a valid date")
	private Date dueDate;
	
	private Long projectCreatorId;
	
	@Column(updatable=false)
	private Date createdAt;
	private Date updatedAt;
	
	@ManyToMany(fetch=FetchType.LAZY)
	@JoinTable(
			name="users_projects",
			joinColumns=@JoinColumn(name="project_id"),
			inverseJoinColumns=@JoinColumn(name="user_id"))
	
	List<User> users;
	
	public Project() {}
	
	public Project(String title, String description, Date dueDate, Long projectCreatorId) {
		this.title = title;
		this.description = description;
		this.dueDate = dueDate;
		this.projectCreatorId = projectCreatorId;
	}
}
